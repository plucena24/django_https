user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
        worker_connections 768;
        # multi_accept on;
}

http {
        #This prevents the server from announing its version to the world:
        server_tokens off;
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        #Don't support TLSv1.1, TSLv1.0, SSL3, as they are weak:
        ssl_protocols TLSv1.2;

        #Don't allow browsers to choose weak ciphers:
        ssl_prefer_server_ciphers on;

        #This is a configuration that gets a 100% for cipher-strength at SLL Labs:
        #The idea is to disable all 128 bit ciphers and only use key exchange
        #which are forward-secret:
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA;

        ssl_session_cache shared:SSL:10m;

        ssl_session_tickets off;

        # Generate this Diffie-Hellman prime with:
        # openssl dhparam -out dhparam.pem -check 4096
        ssl_dhparam /pathtoprime/dhparam.pem;

        #OCSP Stapling:
        #Use Google DNS resolver (swap at will)
        resolver 8.8.8.8;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /pathtobundled/ocsp.crt; 

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        gzip on;
        gzip_disable "msie6";

        include /etc/nginx/conf.d/*.conf;
        # Redirect http request to https:
        server {
                listen         80;
                listen         [::]:80;
                server_name    www.example.com example.com;
                return         301 https://$server_name$request_uri;
        }

        server {
                listen         443;
                ssl            on;
                server_name    example.com;
                ssl_certificate /home/NAThompson/example.com.ssl/bundle.crt;
                ssl_certificate_key /home/NAThompson/example.com.ssl/example.com.key;

                #Make sure that everyone knows you'll always be serving over https,
                #and to recognize a MITM attack by http.
                add_header Strict-Transport-Security 'max-age=63072000; includeSubdomains; always';

                #Disallow people from embedding your website in a frame, prevent clickjacking.
                add_header X-Frame-Options DENY;

                #Disallow IE from trying to guess content types:
                add_header X-Content-Type-Options nosniff;

                #Public key pinning:
                add_header Public-Key-Pins 'pin-sha256="N75JcN+pnfzlS9WlZ5MQ5bMrYf8FixevQdnXECdeI8k="; pin-sha256="LK8yU6d5hJnXaONIycD2bYNCwu9MVBL3MjM/Fs1a9pg="; includeSubDomains; max-age=0';

                location / {
                        proxy_pass http://127.0.0.1:8000;
                        proxy_set_header Host $host;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                }
        }
}
